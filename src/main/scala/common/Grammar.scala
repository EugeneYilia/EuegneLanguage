package common

import common.SyntacticSymbol.{ASSIGN, BLOCK, ELSE_KEYWORD, EXPRESSION, FUNCTION, FUNCTIONS, FUNCTION_KEYWORD, ID, IF_KEYWORD, INT_CONSTANT, LEFT_PAREN, MINUS, MULTI, PLUS, PRINTLN, RIGHT_PAREN, SEMICOLON, STARTER, STATEMENT, STATEMENTS}

object Grammar {
  val derivationList: DerivationList = List[Derivation](
    STARTER -> Vector(FUNCTIONS),

    FUNCTIONS -> Vector(FUNCTIONS, FUNCTION),
    FUNCTIONS -> Vector(FUNCTION),
    FUNCTION -> Vector(FUNCTION_KEYWORD, ID, LEFT_PAREN, RIGHT_PAREN, BLOCK),

    BLOCK -> Vector(LEFT_PAREN, EXPRESSION, RIGHT_PAREN),

    STATEMENTS -> Vector(STATEMENTS, STATEMENT),
    STATEMENTS -> Vector(STATEMENT),

    STATEMENT -> Vector(EXPRESSION, SEMICOLON),

    EXPRESSION -> Vector(INT_CONSTANT),
    EXPRESSION -> Vector(PRINTLN, LEFT_PAREN, EXPRESSION, RIGHT_PAREN),
    EXPRESSION -> Vector(ID),
    EXPRESSION -> Vector(ID, LEFT_PAREN, RIGHT_PAREN),
    EXPRESSION -> Vector(EXPRESSION, PLUS, EXPRESSION),
    EXPRESSION -> Vector(EXPRESSION, MINUS, EXPRESSION),
    EXPRESSION -> Vector(EXPRESSION, MULTI, EXPRESSION),
    EXPRESSION -> Vector(ID, ASSIGN, EXPRESSION),
    EXPRESSION -> Vector(IF_KEYWORD, LEFT_PAREN, EXPRESSION, RIGHT_PAREN, BLOCK, ELSE_KEYWORD, BLOCK)
  )
}
